require "rails_helper"

RSpec.feature "Teacher verifies identity using GOV.UK Verify" do
  before do
    stub_vsp_generate_request

    @claim = start_student_loans_claim
    choose_school schools(:penistone_grammar_school)
    choose_subjects_taught
    choose_still_teaching
    choose_leadership
    click_on "Continue"
  end

  context "successful verification" do
    before do
      stub_vsp_translate_response_request
    end

    scenario "with JavaScript enabled", js: true do
      expect(page).to have_text("How we will use the information you provide")

      click_on "Continue"
      # Submit the form generated by our FakeSso
      click_on "Perform identity check"

      expect(page).to have_text("This is your first name, middle name, surname, address, date of birth, and gender from your digital identity")
      expect(page).to have_text("Isambard")
      expect(page).to have_text("Kingdom")
      expect(page).to have_text("Brunel")
      expect(page).to have_text("Unverified Street")
      expect(page).to have_text("Unverified Town")
      expect(page).to have_text("Unverified County")
      expect(page).to have_text("L12 345")
      expect(page).to have_text("Male")
      expect(page).to have_text(I18n.l(Date.new(1806, 4, 9)))

      click_on "Continue"

      expect(page).to have_text(I18n.t("questions.teacher_reference_number"))

      @claim.reload
      expect(@claim.first_name).to eql("Isambard")
      expect(@claim.middle_name).to eql("Kingdom")
      expect(@claim.surname).to eql("Brunel")
      expect(@claim.address_line_1).to eq("Unverified Street")
      expect(@claim.address_line_2).to eq("Unverified Town")
      expect(@claim.address_line_3).to eq("Unverified County")
      expect(@claim.postcode).to eq("L12 345")
      expect(@claim.date_of_birth).to eq(Date.new(1806, 4, 9))
      expect(@claim.payroll_gender).to eq("male")
    end

    scenario "successful verification with JavaScript disabled" do
      click_on "Continue"
      # non-JS means we need to manually submit the /verify/authentications/new form
      click_on "Continue"
      # Submit the form generated by our FakeSso
      click_on "Perform identity check"

      expect(page).to have_text("We have verified your identity")
      click_on "Continue"

      expect(page).to have_text(I18n.t("questions.teacher_reference_number"))

      @claim.reload
      expect(@claim.first_name).to eql("Isambard")
      expect(@claim.middle_name).to eql("Kingdom")
      expect(@claim.surname).to eql("Brunel")
    end
  end

  scenario "Cancelling the Verify process shows a process incomplete message to the user", js: true do
    stub_vsp_translate_response_request("no-authentication")
    click_on "Continue"
    # Submit the form generated by our FakeSso
    click_on "Perform identity check"

    expect(page).to have_text("you did not complete the process")

    @claim.reload
  end

  scenario "Failing the Verify process shows a failure message to the user", js: true do
    stub_vsp_translate_response_request("authentication-failed")
    click_on "Continue"
    # Submit the form generated by our FakeSso
    click_on "Perform identity check"

    expect(page).to have_text("the company you chose does not have enough information about you")

    @claim.reload
  end

  scenario "Users can take longer than 60 minutes to complete Verify", js: true do
    stub_vsp_translate_response_request
    click_on "Continue"

    travel 80.minutes do
      click_on "Perform identity check"
      expect(page).to_not have_text("Your session has ended due to inactivity")
      expect(page).to have_text("This is your first name, middle name, surname, address, date of birth, and gender from your digital identity")
    end
  end

  scenario "Users who take longer than 120 minutes to complete Verify are told that their session has timed out", js: true do
    stub_vsp_translate_response_request
    click_on "Continue"

    travel 125.minutes do
      click_on "Perform identity check"
      expect(page).to have_text("Your session has ended due to inactivity")
    end
  end
end
