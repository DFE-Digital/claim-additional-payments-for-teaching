name: Deploy environment
description: Deploys an application environment

inputs:
  environment:
    description: The name of the environment
    required: true
  docker-image:
    description: The Docker image to deploy
    required: true
  azure-client-id:
    description: Azure Client ID for authentication
    required: true
  azure-tenant-id:
    description: Azure Tenant ID for authentication
    required: true
  azure-subscription-id:
    description: Azure Subscription ID for authentication
    required: true
  pull-request-number:
    description: The pull request number which triggered this deploy.
    required: false
  prepare-database:
    description: Whether to prepare the database by running migrations or seeding if needed
    required: false
    default: true
  aks-namespace:
    description: The namespace under which kubectl will run
    required: true
  aks-deployment:
    description: The deployment which kubectl will target for running migrations
    required: true

runs:
  using: composite

  steps:
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.4
        terraform_wrapper: false

    - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
      with:
        azure-client-id: ${{ inputs.azure-client-id }}
        azure-tenant-id: ${{ inputs.azure-tenant-id }}
        azure-subscription-id: ${{ inputs.azure-subscription-id }}

    - uses: google-github-actions/auth@v2
      with:
        project_id: claim-additional-payments
        workload_identity_provider: projects/638192024625/locations/global/workloadIdentityPools/claim-additional-payments-for-te/providers/claim-additional-payments-for-te

    - name: Prepare database
      if: ${{ inputs.prepare-database }}
      shell: bash
      run: |
        make ci ${{ inputs.environment }} get-cluster-credentials
        kubectl exec -n ${{ inputs.aks-namespace }} deployment/${{ inputs.aks-deployment }}-worker -- sh -c "DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bin/prepare-database"
      env:
        PR_NUMBER: ${{ inputs.pull-request-number }}

    - name: Terraform Apply
      shell: bash
      run: |
        make ci ${{ inputs.environment }} terraform-apply
      env:
        DOCKER_IMAGE_TAG: ${{ inputs.docker-image }}
        PR_NUMBER: ${{ inputs.pull-request-number }}

    - name: Extract Terraform outputs
      shell: bash
      id: set_outputs
      run: |
        output=$(terraform -chdir=terraform/application output -raw url)
        echo "APP_URL=$output" >> $GITHUB_ENV

    - uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure-client-id }}
        tenant-id: ${{ inputs.azure-tenant-id }}
        subscription-id: ${{ inputs.azure-subscription-id }}

    - name: Set kubectl
      uses: DFE-Digital/github-actions/set-kubectl@master
