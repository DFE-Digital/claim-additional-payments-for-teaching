{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "gitCommitHash": {
      "type": "string"
    },
    "defaultSubnetId": {
      "type": "string"
    },
    "secretsResourceGroupName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "appServiceDockerCompose": {
      "type": "string"
    },
    "appServiceHostNames": {
      "type": "array",
      "metadata": {
        "description": "This must include at least 1 entry. The first host name will be treated as canonical, assuming that all later host names redirect to the canonical one. Include 'PLACEHOLDER' to skip all."
      }
    },
    "appServiceCertificateSecretNames": {
      "type": "array",
      "metadata": {
        "description": "This must include least 1 entry. It will be ignored if appServiceHostNames contains 'PLACEHOLDER'."
      }
    },
    "appServiceHostNameToCertificateSecretNameIndexMap": {
      "type": "object",
      "metadata": {
        "description": "This is a map from host name to appServiceCertificateSecretNames index. It must include values for all appServiceHostNames."
      }
    },
    "useAppServiceHostNames": {
      "type": "bool",
      "defaultValue": true
    },
    "appServiceAlwaysOn": {
      "type": "bool",
      "defaultValue": true
    },
    "appServicePlanSkuTier": {
      "type": "string",
      "defaultValue": "PremiumV2"
    },
    "appServicePlanSkuSize": {
      "type": "string",
      "defaultValue": "P2v2"
    },
    "appServicePlanSkuFamily": {
      "type": "string",
      "defaultValue": "Pv2"
    },
    "appServicePlanSkuCapacity": {
      "type": "int",
      "defaultValue": 2
    },
    "vspAppServiceDockerImage": {
      "type": "string"
    },
    "vspAppServicePlanSkuTier": {
      "type": "string",
      "defaultValue": "PremiumV2"
    },
    "vspAppServicePlanSkuSize": {
      "type": "string",
      "defaultValue": "P2v2"
    },
    "vspAppServicePlanSkuFamily": {
      "type": "string",
      "defaultValue": "Pv2"
    },
    "vspAppServicePlanSkuCapacity": {
      "type": "int",
      "defaultValue": 2
    },
    "verifyHubPossibleOutboundIpAddresses": {
      "type": "array"
    },
    "databaseName": {
      "type": "string"
    },
    "databaseUsername": {
      "type": "string"
    },
    "databasePassword": {
      "type": "securestring"
    },
    "alertEmailAddress": {
      "type": "string"
    },
    "RAILS_ENV": {
      "type": "string",
      "defaultValue": "production"
    },
    "RAILS_SERVE_STATIC_FILES": {
      "type": "string",
      "defaultValue": "true"
    },
    "SECRET_KEY_BASE": {
      "type": "securestring"
    },
    "BASIC_AUTH_USERNAME": {
      "type": "securestring"
    },
    "BASIC_AUTH_PASSWORD": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_ISSUER": {
      "type": "string"
    },
    "DFE_SIGN_IN_REDIRECT_BASE_URL": {
      "type": "string"
    },
    "DFE_SIGN_IN_IDENTIFIER": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_SECRET": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_CLIENT_ID": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_SECRET": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_ENDPOINT": {
      "type": "string"
    },
    "ADMIN_ALLOWED_IPS": {
      "type": "string"
    },
    "MAINTENANCE_MODE": {
      "type": "string"
    },
    "MAINTENANCE_MODE_AVAILABILITY_MESSAGE": {
      "type": "string"
    },
    "GOOGLE_ANALYTICS_ID": {
      "type": "string"
    },
    "NOTIFY_API_KEY": {
      "type": "securestring"
    },
    "NOTIFY_TEMPLATE_ID": {
      "type": "string"
    },
    "ROLLBAR_ACCESS_TOKEN": {
      "type": "securestring"
    },
    "ROLLBAR_ENV": {
      "type": "string"
    },
    "VSP.VERIFY_ENVIRONMENT": {
      "type": "string"
    },
    "VSP.SAML_SIGNING_KEY": {
      "type": "securestring"
    },
    "VSP.SAML_PRIMARY_ENCRYPTION_KEY": {
      "type": "securestring"
    },
    "VSP.SAML_SECONDARY_ENCRYPTION_KEY": {
      "type": "securestring"
    },
    "VSP.EUROPEAN_IDENTITY_ENABLED": {
      "type": "string"
    }
  },
  "variables": {
    "platformBuildingBlocksDeploymentUrlBase": "https://raw.githubusercontent.com/DFE-Digital/bat-platform-building-blocks/7a4748a0cf366193d31434bd7796d483bd281385/templates/",
    "deploymentUrlBase": "[concat('https://raw.githubusercontent.com/DFE-Digital/dfe-teachers-payment-service/', parameters('gitCommitHash'), '/azure/templates/')]",

    "azureAvailabilityTestLocations": [
      { "id": "emea-nl-ams-azr" },
      { "id": "emea-ru-msa-edge" },
      { "id": "emea-se-sto-edge" },
      { "id": "emea-gb-db3-azr" },
      { "id": "emea-fr-pra-edge" }
    ],
    "azureAvailabilityTestIpAddresses": [
      "51.144.56.96/28",
      "51.144.56.112/28",
      "51.144.56.128/28",
      "51.144.56.144/28",
      "51.144.56.160/28",
      "51.144.56.176/28",

      "51.105.9.128/28",
      "51.105.9.144/28",
      "51.105.9.160/28",

      "20.40.104.96/28",
      "20.40.104.112/28",
      "20.40.104.128/28",
      "20.40.104.144/28",

      "52.158.28.64/28",
      "52.158.28.80/28",
      "52.158.28.96/28",
      "52.158.28.112/28",

      "20.40.129.32/28",
      "20.40.129.48/28",
      "20.40.129.64/28",
      "20.40.129.80/28"
    ],

    "applicationInsightsDeploymentName": "[concat(parameters('resourceNamePrefix'), '-application-insights')]",
    "appDeploymentName": "[concat(parameters('resourceNamePrefix'), '-app')]",
    "appServiceWebTestDeploymentName": "[concat(parameters('resourceNamePrefix'), '-app-service-web-test')]",
    "databaseServerFirewallRulesDeploymentName": "[concat(parameters('resourceNamePrefix'), '-database-server-firewall-rules')]",
    "databaseDeploymentName": "[concat(parameters('resourceNamePrefix'), '-database')]",
    "vspDeploymentName": "[concat(parameters('resourceNamePrefix'), '-vsp')]",
    "vspAppServiceWebTestDeploymentName": "[concat(parameters('resourceNamePrefix'), '-vsp-app-service-web-test')]",

    "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), 'storage'), '-', '')]",
    "databaseServerName": "[concat(parameters('resourceNamePrefix'), '-db')]",

    "applicationInsightsName": "[concat(parameters('resourceNamePrefix'), '-ai')]",

    "appServicePlanName": "[concat(parameters('resourceNamePrefix'), '-asp')]",
    "appServiceName": "[concat(parameters('resourceNamePrefix'), '-as')]",
    "appServiceRuntimeStack": "[concat('COMPOSE|', base64(parameters('appServiceDockerCompose')))]",

    "appServiceWebTestName": "[concat(variables('appServiceName'), '-webtest')]",

    "vspAppServicePlanName": "[concat(parameters('resourceNamePrefix'), '-vsp-asp')]",
    "vspAppServiceName": "[concat(parameters('resourceNamePrefix'), '-vsp-as')]",
    "vspAppServiceRuntimeStack": "[concat('DOCKER|', parameters('vspAppServiceDockerImage'))]",

    "vspAppServiceWebTestName": "[concat(variables('vspAppServiceName'), '-webtest')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('databaseDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "defaultSubnetId": {
            "value": "[parameters('defaultSubnetId')]"
          },
          "databaseServerName": {
            "value": "[variables('databaseServerName')]"
          },
          "databaseName": {
            "value": "[parameters('databaseName')]"
          },
          "databaseUsername": {
            "value": "[parameters('databaseUsername')]"
          },
          "databasePassword": {
            "value": "[parameters('databasePassword')]"
          },
          "alertEmailAddress": {
            "value": "[parameters('alertEmailAddress')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('applicationInsightsDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('platformBuildingBlocksDeploymentUrlBase'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('appDeploymentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('databaseDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "gitCommitHash": {
            "value": "[parameters('gitCommitHash')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanSkuTier": {
            "value": "[parameters('appServicePlanSkuTier')]"
          },
          "appServicePlanSkuSize": {
            "value": "[parameters('appServicePlanSkuSize')]"
          },
          "appServicePlanSkuFamily": {
            "value": "[parameters('appServicePlanSkuFamily')]"
          },
          "appServicePlanSkuCapacity": {
            "value": "[parameters('appServicePlanSkuCapacity')]"
          },
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServiceRuntimeStack": {
            "value": "[variables('appServiceRuntimeStack')]"
          },
          "appServiceAlwaysOn": {
            "value": "[parameters('appServiceAlwaysOn')]"
          },
          "appServiceHostNames": {
            "value": "[if(parameters('useAppServiceHostNames'), parameters('appServiceHostNames'), createArray('PLACEHOLDER'))]"
          },
          "appServiceCertificateSecretNames": {
            "value": "[if(parameters('useAppServiceHostNames'), parameters('appServiceCertificateSecretNames'), createArray('PLACEHOLDER'))]"
          },
          "appServiceHostNameToCertificateSecretNameIndexMap": {
            "value": "[parameters('appServiceHostNameToCertificateSecretNameIndexMap')]"
          },
          "keyVaultResourceGroupName": {
            "value": "[parameters('secretsResourceGroupName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "appServiceEnvironmentVariables": {
            "value": [
              {
                "name": "RAILS_ENV",
                "value": "[parameters('RAILS_ENV')]"
              },
              {
                "name": "RAILS_SERVE_STATIC_FILES",
                "value": "[parameters('RAILS_SERVE_STATIC_FILES')]"
              },
              {
                "name": "CANONICAL_HOSTNAME",
                "value": "[if(parameters('useAppServiceHostNames'), first(parameters('appServiceHostNames')), concat(variables('appServiceName'), '.azurewebsites.net'))]"
              },
              {
                "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_USERNAME",
                "value": "[concat(parameters('databaseUsername'), '@', variables('databaseServerName'))]"
              },
              {
                "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_PASSWORD",
                "value": "[parameters('databasePassword')]"
              },
              {
                "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_HOST",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('databaseDeploymentName'))).outputs.databaseServerFullyQualifiedDomainName.value]"
              },
              {
                "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_NAME",
                "value": "[parameters('databaseName')]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))).outputs.instrumentationKey.value]"
              },
              {
                "name": "SECRET_KEY_BASE",
                "value": "[parameters('SECRET_KEY_BASE')]"
              },
              {
                "name": "BASIC_AUTH_USERNAME",
                "value": "[parameters('BASIC_AUTH_USERNAME')]"
              },
              {
                "name": "BASIC_AUTH_PASSWORD",
                "value": "[parameters('BASIC_AUTH_PASSWORD')]"
              },
              {
                "name": "DFE_SIGN_IN_ISSUER",
                "value": "[parameters('DFE_SIGN_IN_ISSUER')]"
              },
              {
                "name": "DFE_SIGN_IN_REDIRECT_BASE_URL",
                "value": "[parameters('DFE_SIGN_IN_REDIRECT_BASE_URL')]"
              },
              {
                "name": "DFE_SIGN_IN_IDENTIFIER",
                "value": "[parameters('DFE_SIGN_IN_IDENTIFIER')]"
              },
              {
                "name": "DFE_SIGN_IN_SECRET",
                "value": "[parameters('DFE_SIGN_IN_SECRET')]"
              },
              {
                "name": "DFE_SIGN_IN_API_CLIENT_ID",
                "value": "[parameters('DFE_SIGN_IN_API_CLIENT_ID')]"
              },
              {
                "name": "DFE_SIGN_IN_API_SECRET",
                "value": "[parameters('DFE_SIGN_IN_API_SECRET')]"
              },
              {
                "name": "DFE_SIGN_IN_API_ENDPOINT",
                "value": "[parameters('DFE_SIGN_IN_API_ENDPOINT')]"
              },
              {
                "name": "MAINTENANCE_MODE",
                "value": "[parameters('MAINTENANCE_MODE')]"
              },
              {
                "name": "MAINTENANCE_MODE_AVAILABILITY_MESSAGE",
                "value": "[parameters('MAINTENANCE_MODE_AVAILABILITY_MESSAGE')]"
              },
              {
                "name": "ADMIN_ALLOWED_IPS",
                "value": "[parameters('ADMIN_ALLOWED_IPS')]"
              },
              {
                "name": "GOOGLE_ANALYTICS_ID",
                "value": "[parameters('GOOGLE_ANALYTICS_ID')]"
              },
              {
                "name": "NOTIFY_API_KEY",
                "value": "[parameters('NOTIFY_API_KEY')]"
              },
              {
                "name": "NOTIFY_TEMPLATE_ID",
                "value": "[parameters('NOTIFY_TEMPLATE_ID')]"
              },
              {
                "name": "ROLLBAR_ACCESS_TOKEN",
                "value": "[parameters('ROLLBAR_ACCESS_TOKEN')]"
              },
              {
                "name": "ROLLBAR_ENV",
                "value": "[parameters('ROLLBAR_ENV')]"
              },
              {
                "name": "GOVUK_VERIFY_VSP_HOST",
                "value": "[concat('https://', variables('vspAppServiceName'), '.azurewebsites.net')]"
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('databaseServerFirewallRulesDeploymentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('databaseDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('platformBuildingBlocksDeploymentUrlBase'),'postgresql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "firewallRuleNamePrefix": {
            "value": "[concat(parameters('resourceNamePrefix'), '-')]"
          },
          "ipAddresses": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServicePossibleOutboundIpAddresses.value]"
          },
          "serverName": {
            "value": "[variables('databaseServerName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('appServiceWebTestDeploymentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'web_test.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webTestName": {
            "value": "[variables('appServiceWebTestName')]"
          },
          "webTestLocations": {
            "value": "[variables('azureAvailabilityTestLocations')]"
          },
          "appServiceHealthcheckUrl": {
            "value": "[concat('https://', reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServiceCanonicalHostName.value, '/healthcheck')]"
          },
          "alertEmailAddress": {
            "value": "[parameters('alertEmailAddress')]"
          },
          "applicationInsightsId": {
            "value": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('vspDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'vsp.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "gitCommitHash": {
            "value": "[parameters('gitCommitHash')]"
          },
          "appServicePlanName": {
            "value": "[variables('vspAppServicePlanName')]"
          },
          "appServicePlanSkuTier": {
            "value": "[parameters('vspAppServicePlanSkuTier')]"
          },
          "appServicePlanSkuSize": {
            "value": "[parameters('vspAppServicePlanSkuSize')]"
          },
          "appServicePlanSkuFamily": {
            "value": "[parameters('vspAppServicePlanSkuFamily')]"
          },
          "appServicePlanSkuCapacity": {
            "value": "[parameters('vspAppServicePlanSkuCapacity')]"
          },
          "appServiceName": {
            "value": "[variables('vspAppServiceName')]"
          },
          "appServiceRuntimeStack": {
            "value": "[variables('vspAppServiceRuntimeStack')]"
          },
          "appServiceAlwaysOn": {
            "value": "[parameters('appServiceAlwaysOn')]"
          },
          "appServiceAllowedIpAddresses": {
            "value": "[union(reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServicePossibleOutboundIpAddresses.value, parameters('verifyHubPossibleOutboundIpAddresses'), variables('azureAvailabilityTestIpAddresses'))]"
          },
          "appServiceEnvironmentVariables": {
            "value": [
              {
                "name": "VERIFY_ENVIRONMENT",
                "value": "[parameters('VSP.VERIFY_ENVIRONMENT')]"
              },
              {
                "name": "SERVICE_ENTITY_IDS",
                "value": "[string(createArray(concat('https://', reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServiceCanonicalHostName.value)))]"
              },
              {
                "name": "SAML_SIGNING_KEY",
                "value": "[parameters('VSP.SAML_SIGNING_KEY')]"
              },
              {
                "name": "SAML_PRIMARY_ENCRYPTION_KEY",
                "value": "[parameters('VSP.SAML_PRIMARY_ENCRYPTION_KEY')]"
              },
              {
                "name": "SAML_SECONDARY_ENCRYPTION_KEY",
                "value": "[parameters('VSP.SAML_SECONDARY_ENCRYPTION_KEY')]"
              },
              {
                "name": "EUROPEAN_IDENTITY_ENABLED",
                "value": "[parameters('VSP.EUROPEAN_IDENTITY_ENABLED')]"
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('vspAppServiceWebTestDeploymentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'web_test.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webTestName": {
            "value": "[variables('vspAppServiceWebTestName')]"
          },
          "webTestLocations": {
            "value": "[variables('azureAvailabilityTestLocations')]"
          },
          "appServiceHealthcheckUrl": {
            "value": "[concat('https://', reference(resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))).outputs.appServiceHostName.value, '/admin/healthcheck')]"
          },
          "alertEmailAddress": {
            "value": "[parameters('alertEmailAddress')]"
          },
          "applicationInsightsId": {
            "value": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
          }
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupId": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "databaseServerId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('databaseDeploymentName'))).outputs.databaseServerId.value]"
    },
    "appServicePlanId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServicePlanId.value]"
    },
    "appServiceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('appDeploymentName'))).outputs.appServiceId.value]"
    },
    "vspAppServicePlanId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))).outputs.appServicePlanId.value]"
    },
    "vspAppServiceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))).outputs.appServiceId.value]"
    }
  }
}
