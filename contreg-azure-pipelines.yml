# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Copy
  displayName: Copy from DH

  jobs:
  - job: Download 
    displayName: Pull images into ACR

    pool:
      vmImage: ubuntu-latest

    variables:
      - group: docker-settings

    steps:
      # Login to DockerHub
    - script: docker login -u $(dockerId) -p $pass
      env:
        pass: $(dockerPassword)
      displayName: Login to DockerHub

    # get the latest copies from dockerhub
    - script: |
        docker pull $(dockerRegistry)/$(dockerImageName):cache-web-dependencies
        docker pull $(dockerRegistry)/$(dockerImageName):cache-test-dependencies || true
        docker pull $(dockerRegistry)/$(dockerImageName):cache-test || true    
        docker pull $(dockerRegistry)/$(dockerImageName):latest 

        docker tag dfedigital/teacher-payments-service:latest s118d01contreg.azurecr.io/teacher-payments-service:latest
        docker tag dfedigital/teacher-payments-service:cache-web-dependencies s118d01contreg.azurecr.io/teacher-payments-service:cache-web-dependencies
        docker tag dfedigital/teacher-payments-service:cache-test s118d01contreg.azurecr.io/teacher-payments-service:cache-test
        docker tag dfedigital/teacher-payments-service:cache-test-dependencies s118d01contreg.azurecr.io/teacher-payments-service:cache-test-dependencies
      displayName: pull latestest images from dockerhub and tag for ACR

  # docker push ***/teacher-services-payments:cache-web-dependencies
    - task: Docker@2
      displayName: login into ACR
      inputs:
        containerRegistry: 's118d01contreg'
        command: 'login'

    - task: Docker@2
      displayName: push cache-web-dependencies container to ACR
      inputs:
        containerRegistry: 's118d01contreg'
        repository: 'teacher-payments-service'
        command: 'push'
        tags: 'cache-web-dependencies'

    - task: Docker@2
      displayName: push cache-test-dependencies container to ACR
      inputs:
        containerRegistry: 's118d01contreg'
        repository: 'teacher-payments-service'
        command: 'push'
        tags: 'cache-test-dependencies'

    - task: Docker@2
      displayName: push cache-test container to ACR
      inputs:
        containerRegistry: 's118d01contreg'
        repository: 'teacher-payments-service'
        command: 'push'
        tags: 'cache-test'

    - task: Docker@2
      displayName: push latest container to ACR
      inputs:
        containerRegistry: 's118d01contreg'
        repository: 'teacher-payments-service'
        command: 'push'
        tags: 'latest'

- stage: Build
  displayName: Build latest Container
  dependsOn: Copy

  jobs:
  - job: ContainerBuild
    displayName: Build and push conatiners to ACR

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      - group: docker-settings

    steps:
      # Login to DockerHub
      - script: docker login -u $(dockerId) -p $pass
        env:
          pass: $(dockerPassword)
        displayName: Login to DockerHub

      - task: Docker@2
        displayName: login into ACR
        inputs:
          containerRegistry: 's118d01contreg'
          command: 'login'

      # Build and run tests
      - script: |
          docker pull $(acrRegistry)/$(dockerImageName):cache-test-dependencies || true
          docker pull $(acrRegistry)/$(dockerImageName):cache-test || true
        displayName: Pull test and test dependencies images 

      - task: DockerCompose@0
        displayName: Build test Docker image  
        inputs:
          containerregistrytype: 'Azure Container Registry'
          azureSubscription: 'azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef'
          azureContainerRegistry: '{"loginServer":"s118d01contreg.azurecr.io", "id" : "/subscriptions/8655985a-2f87-44d7-a541-0be9a8c2779d/resourceGroups/s118d01-contreg/providers/Microsoft.ContainerRegistry/registries/s118d01contreg"}'
          dockerComposeFile: 'docker-compose.test.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'build'

      - task: DockerCompose@0
        displayName: Run test on Docker
        inputs:
          containerregistrytype: 'Azure Container Registry'
          azureSubscription: 'azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef'
          azureContainerRegistry: '{"loginServer":"s118d01contreg.azurecr.io", "id" : "/subscriptions/8655985a-2f87-44d7-a541-0be9a8c2779d/resourceGroups/s118d01-contreg/providers/Microsoft.ContainerRegistry/registries/s118d01contreg"}'
          dockerComposeFile: 'docker-compose.test.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'run --rm test'

      # # Clean up
      - script: |
          git reset --hard
          git clean -xdf
        displayName: Clean repository

      # Publish
      - publish: $(System.DefaultWorkingDirectory)
        artifact: repository
        displayName: Publish repository as artifact

      # # Build web dependencies
      - task: Docker@2
        displayName: Build web dependencies Docker image using 'cache-web-dependencies' as cache      
        inputs:
          containerRegistry: 's118d01contreg'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: local/dfe-teachers-payment-service:web-dependencies
          arguments: '--cache-from=$(acrRegistry)/$(dockerImageName):cache-web-dependencies --target=dependencies'
        condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')      

      - task: Docker@2
        displayName: Build web dependencies Docker image without cache      
        inputs:
          containerRegistry: 's118d01contreg'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: local/dfe-teachers-payment-service:web-dependencies
          arguments: '--target=dependencies'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      # # Build web
      - script: |
          docker pull $(acrRegistry)/$(dockerImageName):latest || true
        displayName: Pull latest from ACR
    
      - task: Docker@2
        displayName: Build web Docker image using 'latest' as cache      
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: 'web'
          arguments: '--cache-from=local/dfe-teachers-payment-service:web-dependencies --cache-from=$(acrRegistry)/$(dockerImageName):latest --target=web --build-arg GIT_COMMIT_HASH=$(Build.SourceVersion)'
        condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

      - task: Docker@2
        displayName: Build web Docker image without cache      
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: 'web'
          arguments: '--cache-from=local/dfe-teachers-payment-service:web-dependencies --target=web --build-arg GIT_COMMIT_HASH=$(Build.SourceVersion)'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')



      # Push test images
      - script: |
          docker tag local/dfe-teachers-payment-service:test-dependencies $(acrRegistry)/$(dockerImageName):cache-test-dependencies
        displayName: Tag local test dependencies Docker image for caching
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      - task: Docker@2
        displayName: Push test Docker image for caching
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'push'
          tags: 'cache-test-dependencies'  
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')


      - script: |
          docker tag local/dfe-teachers-payment-service:test $(acrRegistry)/$(dockerImageName):cache-test
        displayName: Tag local Docker image for caching
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      - task: Docker@2
        displayName: Push test Docker image for caching
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'push'
          tags: 'cache-test'  
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      # # Push web images
      - script: |
          docker tag local/dfe-teachers-payment-service:web-dependencies $(acrRegistry)/$(dockerImageName):cache-web-dependencies
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        displayName: Tag local web dependencies Docker image for caching

      - task: Docker@2
        displayName: Push web dependencies Docker image for caching
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'push'
          tags: 'cache-web-dependencies'  
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      - script: 
          docker tag local/dfe-teachers-payment-service:web $(acrRegistry)/$(dockerImageName):$(Build.BuildNumber)
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        displayName: Tag local build number Docker image for caching

      - task: Docker@2
        displayName: Push build number Docker image
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'push'
          tags: $(Build.BuildNumber)  
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      - script:
          docker tag local/dfe-teachers-payment-service:web $(acrRegistry)/$(dockerImageName):latest
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        displayName: Tag local latest Docker image for caching

      - task: Docker@2
        displayName: Push latest Docker image
        inputs:
          containerRegistry: 's118d01contreg'
          repository: 'teacher-payments-service'
          command: 'push'
          tags: latest  
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master') 