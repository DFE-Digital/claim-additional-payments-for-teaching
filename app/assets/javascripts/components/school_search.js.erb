"use strict";

document.addEventListener("DOMContentLoaded", function () {
  var form = document.querySelector("form.school_search_form");

  if (!form) {
    return;
  }

  var searchInputContainer = form.querySelector("#school-search-container");

  if (!searchInputContainer) {
    return;
  }

  var schoolIdInput = form.querySelector("#" + form.getAttribute("data-school-id-param"));

  if (!schoolIdInput) {
    return;
  }

  var excludeClosedSchools = form.getAttribute("data-exclude-closed") || false;

  var currentPolicy = form.getAttribute("data-current-policy");

  var methodInput = form.querySelector('input[name="_method"]');
  var formSubmit = form.querySelector('input[type="submit"]');

  var defaultSchoolIdInputValue = schoolIdInput.value || "";
  var defaultFormMethod = form.method || "";
  var defaultMethodInputValue = methodInput.method || "";
  var defaultFormSubmitValue = formSubmit.value || "";

  function setSubmitValue(value) {
    formSubmit.value = value;
    formSubmit.setAttribute("data-disable-with", value);
  }

  function resetForm(e) {
    schoolIdInput.value = defaultSchoolIdInputValue;
    form.method = defaultFormMethod;
    methodInput.value = defaultMethodInputValue;
    setSubmitValue(defaultFormSubmitValue);
  }

  var schools = [];

  function getSchoolIds() {
    return schools.map(function (school) {
      return school.id;
    });
  }

  function findSchool(id) {
    for (var i = 0; i < schools.length; i++) {
      var school = schools[i];

      if (school.id === id) {
        return school;
      }
    }
  }

  accessibleAutocomplete({
    element: searchInputContainer,
    id: "school_search",
    name: "school_search",
    source: function (query, populateResults) {
      function handleResponse(response) {
        schools = response.data || [];

        populateResults(getSchoolIds());
      }

      Rails.ajax({
        type: "post",
        url: "<%= Rails.application.routes.url_helpers.school_search_index_path %>",
        data: "query=" + query + "&exclude_closed=" + excludeClosedSchools.toString(),
        success: handleResponse,
        error: handleResponse
      });
    },
    minLength: parseInt("<%= School::SEARCH_MINIMUM_LENGTH %>"),
    showNoOptionsFound: false,
    confirmOnBlur: false,
    templates: {
      inputValue: function (id) {
        var school = findSchool(id);
        if (school) return school.name;
      },
      suggestion: function (id) {
        var school = findSchool(id);

        var suggestion =
          '<div class="school-search__suggestion">' +
          '<div class="school-search__suggestion-main-section">' +
          '<label class="govuk-label govuk-label--s">' +
          school.name +
          "</label>" +
          '<span class="govuk-hint">' +
          school.address +
          "</span>" +
          "</div>";

        if (school.closeDate) {
          suggestion +=
            '<div class="school-search__closed-status">' +
            '<span class="govuk-hint govuk-!-margin-bottom-1">' +
            "Closed on<br>" +
            school.closeDate +
            "</span>" +
            "</div>";
        }

        suggestion += "</div>";
        return suggestion;
      }
    },
    onConfirm: function (id) {
      var school = findSchool(id);

      if (!school) {
        resetForm();
        return;
      }

      schoolIdInput.value = school.id;

      if (currentPolicy == "additional-payments") {
        methodInput.value = "patch";
        setSubmitValue(defaultFormSubmitValue);
      } else {
        form.method = "post";
        methodInput.value = "patch";
        setSubmitValue("Continue");
      }
    }
  });

  var oldSearchInput = form.querySelector('input[name="school_search"]');
  var searchValue = oldSearchInput.value;

  oldSearchInput.parentNode.removeChild(oldSearchInput);

  var newSearchInput = form.querySelector('input[name="school_search"]');

  newSearchInput.value = searchValue;
  newSearchInput.addEventListener("input", function () {
    resetForm();
  });

  resetForm();
});
