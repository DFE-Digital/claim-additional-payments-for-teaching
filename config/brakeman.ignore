{
  "ignored_warnings": [
    {
      "warning_type": "Dynamic Render Path",
      "warning_code": 15,
      "fingerprint": "23e1b8f42ab87b9f17f883de7ac8b7b11261ec3dd8f8ad11f06aaae2a3b6fc51",
      "check_name": "Render",
      "message": "Render path contains parameter value",
      "file": "app/controllers/admin/tasks_controller.rb",
      "line": 40,
      "link": "https://brakemanscanner.org/docs/warning_types/dynamic_render_path/",
      "code": "render(action => Claim.includes(:tasks).find(params[:claim_id]).tasks.where(:name => params[:name]).first.name, {})",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::TasksController",
        "method": "update"
      },
      "user_input": "params[:name]",
      "confidence": "Weak",
      "note": "Create and update should be flagged but change is not different from existing behaviour, raising issue."
    },
    {
      "warning_type": "Dynamic Render Path",
      "warning_code": 15,
      "fingerprint": "2e15a7fa4c8b8254b7724a1c5b8553cf4f7372f62b9401e1f5cbda1abe8c62ef",
      "check_name": "Render",
      "message": "Render path contains parameter value",
      "file": "app/controllers/admin/tasks_controller.rb",
      "line": 15,
      "link": "https://brakemanscanner.org/docs/warning_types/dynamic_render_path/",
      "code": "render(action => Claim.includes(:tasks).find(params[:claim_id]).tasks.find_or_initialize_by(:name => params[:name]).name, {})",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::TasksController",
        "method": "show"
      },
      "user_input": "params[:name]",
      "confidence": "Weak",
      "note": "Constrained to valid input by routes"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "46bfd0a9d4a19eb048a883184b501b060aa4d6006accc3c76bbfc00722b44dbf",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/claim/search.rb",
      "line": 28,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Claim.where(\"LOWER(#{attribute}) = LOWER(?)\", search_term)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Search",
        "method": "search_by"
      },
      "user_input": "attribute",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "aac74520956533997d73d1c601c2bcde5d3cd501f14401fb9cb8e2bfdc7862fa",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/claim/matching_attribute_finder.rb",
      "line": 31,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Claim.where(\"LOWER(#{\"CONCAT(#{attributes.join(\",\")})\"}) = LOWER(?)\", values_for_attributes(attributes).join)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "MatchingAttributeFinder",
        "method": "matching_claims"
      },
      "user_input": "attributes.join(\",\")",
      "confidence": "Medium",
      "note": "The concetenated attributes in the CONCAT operation are not user-generated, so this can be safely ignored"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "c4fdf9ee92b32192d72283914eab27b9347688634b08078a5f0a5986efa12dab",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/claim_stats/daily.rb",
      "line": 20,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"SELECT\\n'#{date}' AS extract_date,\\n  policy,\\n  ROUND(AVG(submission_length))\\n    AS average_claim_submission_length,\\n  ROUND(AVG(decision_length))\\n    AS average_claim_decision_length,\\n  COUNT(claim_id)\\n    AS applications_started_total,\\n  COUNT(claim_id) filter (where claim_submitted_at is not null)\\n    AS applications_submitted_total,\\n  COUNT(claim_id) filter (where result = 'rejected')\\n    AS applications_rejected_total,\\n  COUNT(claim_id) filter (where result = 'accepted')\\n    AS applications_accepted_total,\\n  COUNT(claim_id) filter (where claim_started_at::date = '#{date}')\\n    AS applications_started_daily,\\n  COUNT(claim_id) filter (where claim_submitted_at::date = '#{date}')\\n    AS applications_submitted_daily,\\n  COUNT(claim_id) filter (where result = 'rejected' and decision_made_at::date = '#{date}')\\n    AS applications_rejected_daily,\\n  COUNT(claim_id) filter (where result = 'accepted' and decision_made_at::date = '#{date}')\\n    AS applications_accepted_daily\\nFROM\\n  #{ClaimStats.table_name}\\nWHERE\\n  claim_started_at < '#{date.end_of_day}'\\nGROUP BY\\n  policy\\nORDER BY\\n  policy\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Daily",
        "method": "daily"
      },
      "user_input": "date",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "dc2ed132897187b2950a4358e22d70cf3f57a65db3730cc0f81e807de5977758",
      "check_name": "SendFile",
      "message": "Model attribute used in file name",
      "file": "app/controllers/admin/payroll_run_downloads_controller.rb",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(Payroll::PaymentsCsv.new(PayrollRun.find(params[:payroll_run_id])).file, :type => \"text/csv\", :filename => Payroll::PaymentsCsv.new(PayrollRun.find(params[:payroll_run_id])).filename)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::PayrollRunDownloadsController",
        "method": "show"
      },
      "user_input": "Payroll::PaymentsCsv.new(PayrollRun.find(params[:payroll_run_id])).file",
      "confidence": "Medium",
      "note": "We generate the filename based on non-user input so we can ignore this"
    }
  ],
  "updated": "2021-09-14 10:51:51 +0100",
  "brakeman_version": "5.1.1"
}
